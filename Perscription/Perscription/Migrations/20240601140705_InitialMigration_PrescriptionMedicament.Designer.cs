// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prescription.Context;

#nullable disable

namespace Prescription.Migrations
{
    [DbContext(typeof(PrescriptionAppContext))]
    [Migration("20240601140705_InitialMigration_PerscriptionMedicament")]
    partial class InitialMigration_PerscriptionMedicament
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Perscription.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDoctor"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor")
                        .HasName("PK_Doctor");

                    b.ToTable("Doctor", "prsp");
                });

            modelBuilder.Entity("Perscription.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedicament"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament")
                        .HasName("PK_Medicament");

                    b.ToTable("Medicament", "prsp");
                });

            modelBuilder.Entity("Perscription.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient")
                        .HasName("PK_Patient");

                    b.ToTable("Patient", "prsp");
                });

            modelBuilder.Entity("Perscription.Models.Perscription", b =>
                {
                    b.Property<int>("IdPerscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerscription"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPerscription")
                        .HasName("PK_Perscription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Perscription", "prsp");
                });

            modelBuilder.Entity("Perscription.Models.PerscriptionMedicament", b =>
                {
                    b.Property<int>("IdPerscription")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdPerscription", "IdMedicament")
                        .HasName("PK_Perscription_Medicament");

                    b.HasIndex("IdMedicament");

                    b.ToTable("PerscriptionMedicament", "prsp");
                });

            modelBuilder.Entity("Perscription.Models.Perscription", b =>
                {
                    b.HasOne("Perscription.Models.Doctor", "Doctor")
                        .WithMany("Perscriptions")
                        .HasForeignKey("IdDoctor")
                        .IsRequired();

                    b.HasOne("Perscription.Models.Patient", "Patient")
                        .WithMany("Perscriptions")
                        .HasForeignKey("IdPatient")
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Perscription.Models.PerscriptionMedicament", b =>
                {
                    b.HasOne("Perscription.Models.Medicament", "Medicament")
                        .WithMany("Perscriptions")
                        .HasForeignKey("IdMedicament")
                        .IsRequired();

                    b.HasOne("Perscription.Models.Perscription", "Perscription")
                        .WithMany("Medicaments")
                        .HasForeignKey("IdPerscription")
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Perscription");
                });

            modelBuilder.Entity("Perscription.Models.Doctor", b =>
                {
                    b.Navigation("Perscriptions");
                });

            modelBuilder.Entity("Perscription.Models.Medicament", b =>
                {
                    b.Navigation("Perscriptions");
                });

            modelBuilder.Entity("Perscription.Models.Patient", b =>
                {
                    b.Navigation("Perscriptions");
                });

            modelBuilder.Entity("Perscription.Models.Perscription", b =>
                {
                    b.Navigation("Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
